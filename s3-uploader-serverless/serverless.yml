service: s3-uploader-backend

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:DEPLOY_REGION}
  apiGateway:
    usagePlan:
      quota:
        limit: 1000000
        period: MONTH
      throttle:
        burstLimit: 200
        rateLimit: 100
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:ListBucket
      Resource:
        - "arn:aws:s3:::emisa-pub-pictures"
        - "arn:aws:s3:::emisa-pub-pictures/*"
        - "arn:aws:s3:::emisa-pub-pictures-dev"
        - "arn:aws:s3:::emisa-pub-pictures-dev/*"
  environment:
    DEPLOY_REGION: ${env:DEPLOY_REGION}
    S3_BUCKET_NAME: ${env:S3_BUCKET_NAME}
    CLOUDFRONT_DOMAIN: ${env:CLOUDFRONT_DOMAIN}
    FRONTEND_DOMAIN: ${env:FRONTEND_DOMAIN}
    # Auth related environment (HARD-CODED per request)
    JWT_SECRET: "e454f316420796e12037da0ea50c06490cfb5dfba5c7c23d406d04ecf647986e"
    JWT_EXPIRES_IN: "7d"
    AUTH_USERS: ""
    ADMIN_EMAIL: "eduardmisa"
    ADMIN_PASSWORD: "eduardmisa2025"
    ADMIN_PASSWORD_HASH: "$2a$10$zKRscjw3Eom2Jj3Qfa/Osel42MR1ui1oiHNa2w3AWwRCWlSLfn8s."
    ADMIN_NAME: "eduard"
    # CloudFront signed cookies (HARD-CODED private key; consider Secrets Manager for production)
    CLOUDFRONT_KEY_PAIR_ID: "K3CU094H6L3UW1"
    CLOUDFRONT_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC2oDfyLJ5h2hVS\nxiBGZKNL2vm7B2iMyE/D5BAGDZIoeDIiumB0ECR8Nvm1ygSQ7/WDjh+ciFBLgVPA\nrnSKW2zgd0O6NSWxIKJVQlkbWupBHYsooR6qD8bbBdnjsFbqVuuuDNnebkXKr/v7\nD19l9JR3bXWyfxl4KMKYvBi2NumgB22quHJfmpugp0CcrFQ84alZW69ocI0jqWMM\n33HQyb4dqrDUDauK7MQyYueE2diKk8LUU51flH1/xGdPXCiiWQTjpwWDJ9HThmUK\njOgiAv2hEeuJOaMguLAKtJasRe4uY7+z+G+1T7JrjzgMGyqk+4+3QsYoiL6f3NGp\nRi4B8OM5AgMBAAECggEAEtZj7u77R0yfdnJJUfl/fouPxuL0vdDLqYEUxgsQUGxV\nf4+J827W1Jk3GLFF101pHbDDQfotjhxA71cPXlYf3OdwbPyebq7XD8RQPKocD6tk\nd0RnTVNjR6RK3VmLHZDproJU1sS5HjcY3sSvKm0YA1mfElJZ5jMOH4MHaYQwhPkS\njoXlKT+3b+uJdVj22ly8qBTP6c7d6KlNzaJATXeMGtHWbKuq/5LtkB5Ct8BXydPw\nOjE+TQeckwwD4rEVpdek0ROoR0tgJQJ5wiXIVa7twBraNlKalr9FDTzQSomGuvIC\nkfvhqi85x7qs4u912rn3a0oX0xVkTZA40sRD1qaQgQKBgQDR5OBTCSaaSpIK8w5F\nqVytKOxySMT4lGc+3r9YBJOOzHNSjWFtphtAk/fLsarqaE7iMdD/OxiCgv7Z9ZKs\nx/HIUqWZrI8awqVVWDdHOjv2S8q+EeaFknOQoYTuU5IiYiGPMxRlHDoVGvelkJH3\n5mMSWD6AoP6cdFX19WRoKQzeXQKBgQDevfM/yWSHQfmWk2jhTzfEkLhAgi2PbVtY\nVEvOEZhIrRc1IVRldWh+9YaSDddkgipxN4KZXE7HYj2QbeWlZitz+wXqD2oUqmFC\naygXOx50IcCThMaCFjpgEsW3N07c5a3VdvOoNa4nznRBE8Jtb4e+6gR05d14Zrw9\ncfJ9BtlyjQKBgQCt/fPzAXftmPldeESRfKalqHHw/t/BTIwVsuKdHRYQ3uyON0LX\neUXID6DvSvVq4VLa8P7WRO+5aMvIdGjFL+3+6Hv8Wu45+bbCe6E/O0fvkL6dNwuI\nGHISJ8KhKcfPFtfI9Efo1TBUxIkbxy8pd+MSlvIhANRvb4S+olA8hCL1xQKBgGEq\ngauIwibS2/sYsP7gnNZNv2K8pv1TWi6tDyiEumaxw1b1BCkCT6RanOqnyRdaRQOA\nkKMwBlmp/Gs91ZkSedAtaAYT1VXQgX8E2cdQjddhRe3UVPg4lByG8+MZ6HgqZWui\naWYujJtmz4X4Ba/RoGjjEzCfeb5lKqavR3XNABydAoGAeY3LITbwGW2YH6RIJ2WQ\n+ovadfm2zQqWuktkSzeWfbwQRTqxf6Ld7Nevgo++hOxTl6p345Fsf1ssaTlECHhK\ndQmg9nrSSSLp71lW0lNjwYMTvfv0yz7N/NMmSM2c0o07UoHtAYUYdzCTOG4jJje1\nXvNj1tJChMNNQOL+xd6MHHM=\n-----END PRIVATE KEY-----"

build:
  esbuild:
    bundle: true
    external:
      - '@aws-sdk/*'
    packages: external
    buildConcurrency: 3
    minify: false
    sourcemap:
      type: linked
      setNodeOptions: true

custom:
  allowedOrigins:
    - ${env:FRONTEND_DOMAIN}

functions:
  getPresignedUrl:
    handler: src/handlers/getPresignedUrl.getPresignedUrl
    events:
      - http:
          path: upload
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
            cacheControl: max-age=600

  listS3Files:
    handler: src/handlers/listFiles.listFiles
    events:
      - http:
          path: files
          method: get
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  generateThumbnails:
    handler: src/handlers/generateThumbnails.generateThumbnails
    events:
      - http:
          path: thumbnails/generate
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  login:
    handler: src/handlers/login.login
    events:
      - http:
          path: auth/login
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  logout:
    handler: src/handlers/logout.logout
    events:
      - http:
          path: auth/logout
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

resources:
  Resources:
    # No resources needed for this simplified backend
