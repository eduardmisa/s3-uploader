service: s3-uploader-backend

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:DEPLOY_REGION}
  apiGateway:
    usagePlan:
      quota:
        limit: 1000000
        period: MONTH
      throttle:
        burstLimit: 200
        rateLimit: 100
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:ListBucket
      Resource:
        - "arn:aws:s3:::emisa-pub-pictures"
        - "arn:aws:s3:::emisa-pub-pictures/*"
        - "arn:aws:s3:::emisa-pub-pictures-dev"
        - "arn:aws:s3:::emisa-pub-pictures-dev/*"
  environment:
    DEPLOY_REGION: ${env:DEPLOY_REGION}
    S3_BUCKET_NAME: ${env:S3_BUCKET_NAME}
    CLOUDFRONT_DOMAIN: ${env:CLOUDFRONT_DOMAIN}
    FRONTEND_DOMAIN: ${env:FRONTEND_DOMAIN}
    # Auth related environment (HARD-CODED per request)
    JWT_SECRET: "e454f316420796e12037da0ea50c06490cfb5dfba5c7c23d406d04ecf647986e"
    JWT_EXPIRES_IN: "7d"
    AUTH_USERS: ""
    ADMIN_EMAIL: "eduardmisa"
    ADMIN_PASSWORD: "eduardmisa2025"
    ADMIN_PASSWORD_HASH: "$2a$10$zKRscjw3Eom2Jj3Qfa/Osel42MR1ui1oiHNa2w3AWwRCWlSLfn8s."
    ADMIN_NAME: "eduard"
    # CloudFront signed cookies (HARD-CODED private key; consider Secrets Manager for production)
    CLOUDFRONT_KEY_PAIR_ID: "K1BAGQHVC71SZA"
    CLOUDFRONT_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDPLXa89FKiYFpy\nXo5d7nugGaGpJi75btdwtCS2nlzfe26P12b6a4+LRoa+alKjIUhqI7vB/rB9q59z\nCq+d50+FZa/a4FD0f/hBDpSlITcNB25KY2hFiD5iARjkMdAfzN8MoUY6FkKqKExD\nvN57BdumtMgPQzlSEN3AH8cG6ePW7syyEQbicitW5RF50Snw70JR7hUla0aAGqbE\nm4M++DbNtIVijjbpC70UGJhu4bgopy7MQja1Q319WwK4/qnJfC9U8X5raIe4/Fsu\nFnxM74gw/K1GnRKlxz6qGmfjK502FfHPWpLmdK5MIbpQwIHdeL8q4m2mzZmBOCQC\nzF34XTu3AgMBAAECggEACLiMGuUZkcgGvQsgHAuDY0uUHTSQ92/3T3SBAFNUBOMQ\nIt7scOMhNKAmravernFvhNEPQMArU4braQjMnq153Y6LvTKb32CADAdq/ptFn92t\ntbtPstZkcqfc997lUpYppEFcdup9kOZHjsLL0xew7zU4Uw6MQnLL55/1NuQwJcAH\nhdK91ZdeFSd8NTvc7SgBhqhat6v9hg7ZUp0qDAv1schHuRQxMeEA41CrjhLUYCuD\nevmJqPKqQ4TXYMpFMlTiSR41jwQui1azpZkzapxdAv5ZiFT/E80+Xd549mXQ/maP\nTfNqkFWs/h6j2nbOZ4V22YhE6eD0PsxFSZW8/hVunQKBgQDR1aXCVnefR6Zs4wFX\nL3Kz1UrxCl8QOGpiZomqqqkzm8w6EnVzcwo3mOLLVJTzQ2KwKLNiWKNTcgogwNuw\nkPQE/R9vE/LRim1ylIk0MwKSMV9m+/LQo4dg3ng7k6aKFGrXoplg/Mumt5Rqytzs\nxjru2j1tQaNeHlHpnBC7sTDpmwKBgQD8wiuCuixMVWcIJkw4xoD+c0HdKN+wM7PZ\nz82nIsn+MtQVGr8DK0RijPdXkiPJBmzPecnFbDtZHyySRaLu2I2tDEPzx0k/L5pC\nUPYdCG9p0EXR6C00Cv+R7rUN7nlt8QAfaFjhUEM6eIPPiVqk8CFbAD5AiEEwFCso\nyuCgAKBWFQKBgHAc/tu+51srJTi4cVbr+xUquUfgirpX6j95GcUeOhlg/NVqV2a/\n6I2cGlEZeBwhvPDyTiYVxe4n2FF3uem1CSxBMjJfLjXXCHNX+ZbySkViK98SbsIb\nHZIcS5FJaooMLqnYLqsrZoRFQf9tNG0t3P8RjBB8KZV4DbwLrsUZ/1BRAoGBAN/O\nVpSkoQDeRiLzNl63dhTYnaNkw9zTixb8Z87sgQsympQtYKE/uIfC5miGIGWp6MM1\nxbGoCkz5y4+hVYpD+f8WczzyYystzVuXMLW4eF6raodZHF2Ot4nSYkL5vE/bLA6j\naL/pP/4QJDaqGrcdYYughX7Cp2YZFbZDHe7PXymZAoGAdXfXdJcv7H/9JBQILJdF\n0wVFqf2+mvYQmaivDnUs/txiLIe9OFaWTvBEuXn1C+x7fXZysUBqGLKwCC741vuh\nrBMciIpAvNGG6FtTKQw58VvYSuQwRg+Ouk5d0w8P8zZUil97Q2foGgLpD5nqNx0f\nBuCdtp90DS6Pe3wHSiR7blg=\n-----END PRIVATE KEY-----"
build:
  esbuild:
    bundle: true
    external:
      - '@aws-sdk/*'
    packages: external
    buildConcurrency: 3
    minify: false
    sourcemap:
      type: linked
      setNodeOptions: true

custom:
  allowedOrigins:
    - ${env:FRONTEND_DOMAIN}

functions:
  getPresignedUrl:
    handler: src/handlers/getPresignedUrl.getPresignedUrl
    events:
      - http:
          path: upload
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
            cacheControl: max-age=600

  listS3Files:
    handler: src/handlers/listFiles.listFiles
    events:
      - http:
          path: files
          method: get
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  generateThumbnails:
    handler: src/handlers/generateThumbnails.generateThumbnails
    events:
      - http:
          path: thumbnails/generate
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  login:
    handler: src/handlers/login.login
    events:
      - http:
          path: auth/login
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  logout:
    handler: src/handlers/logout.logout
    events:
      - http:
          path: auth/logout
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

resources:
  Resources:
    # No resources needed for this simplified backend
